## Global options
knitr::opts_chunk$set(cache = TRUE)
# Pacotes
library(data.table) # Framework de manipulação dos dados
library(echarts4r) # Framework de visualização de séries temporais
# Tabela Central - Ocorrência
ocorrencia <- data.table::fread(
"http://sistema.cenipa.aer.mil.br/cenipa/media/opendata/ocorrencia.csv",
encoding = "UTF-8"
)
# Tabela Complementar 1 - Código de Ocorrência 1
ocorrencia_tipo <- data.table::fread(
"http://sistema.cenipa.aer.mil.br/cenipa/media/opendata/ocorrencia_tipo.csv",
encoding = "UTF-8"
)
# Tabela Complementar 2 - Código de Ocorrência 2
aeronave <- data.table::fread(
"http://sistema.cenipa.aer.mil.br/cenipa/media/opendata/aeronave.csv",
encoding = "UTF-8"
)
# Tabela Complementar 3 - Código de Ocorrência 3
fator_contribuinte <- data.table::fread(
"http://sistema.cenipa.aer.mil.br/cenipa/media/opendata/fator_contribuinte.csv",
encoding = "UTF-8"
)
# Tabela Complementar 4 - Código de Ocorrência 4
recomendacao <- data.table::fread(
"http://sistema.cenipa.aer.mil.br/cenipa/media/opendata/recomendacao.csv",
encoding = "UTF-8"
)
nome_tabelas_complementares = list("OCORRENCIA_TIPO", "AERONAVE", "FATOR_CONTRIBUINTE", "RECOMENDACAO")
chave_tabelas_complementares = list("codigo_ocorrencia1", "codigo_ocorrencia2", "codigo_ocorrencia3", "codigo_ocorrencia4")
reactable::reactable(data.table::data.table(nome_tabelas_complementares, chave_tabelas_complementares))
head(ocorrencia[, c("codigo_ocorrencia", "codigo_ocorrencia1", "codigo_ocorrencia2", "codigo_ocorrencia3", "codigo_ocorrencia4")])
identical(
ocorrencia[, codigo_ocorrencia],
ocorrencia[, codigo_ocorrencia1],
ocorrencia[, codigo_ocorrencia2],
ocorrencia[, codigo_ocorrencia3],
ocorrencia[, codigo_ocorrencia4]
)
cruzamento1 <- ocorrencia[ocorrencia_tipo, on = "codigo_ocorrencia1"] # Left Join 1
cruzamento2 <- cruzamento1[aeronave, on = "codigo_ocorrencia2"] # Left Join 2
cruzamento3 <- cruzamento2[fator_contribuinte, on = "codigo_ocorrencia3"] # Left Join 3
# tabela <- cruzamento3[recomendacao, on = "codigo_ocorrencia4"] # Left Join 4
head(ocorrencia[, .(n = .N), by = codigo_ocorrencia][n > 1][order(-n)])
head(ocorrencia_tipo[, .(n = .N), by = codigo_ocorrencia1][n > 1][order(-n)])
head(aeronave[, .(n = .N), by = codigo_ocorrencia2][n > 1][order(-n)])
head(fator_contribuinte[, .(n = .N), by = codigo_ocorrencia3][n > 1][order(-n)])
head(recomendacao[, .(n = .N), by = codigo_ocorrencia4][n > 1][order(-n)])
cruzamento1 <- ocorrencia_tipo[ocorrencia, on = "codigo_ocorrencia1", allow.cartesian = TRUE] # Left Join 1
cruzamento2 <- aeronave[cruzamento1, on = "codigo_ocorrencia2", allow.cartesian = TRUE] # Left Join 2
cruzamento3 <- fator_contribuinte[cruzamento2, on = "codigo_ocorrencia3", allow.cartesian = TRUE] # Left Join 3
tabela <- recomendacao[cruzamento3, on = "codigo_ocorrencia4", allow.cartesian = TRUE] # Left Join 4
head(tabela)
colunas0 <- names(ocorrencia)
colunas1 <- names(ocorrencia_tipo)[2:length(names(ocorrencia_tipo))] # Eliminando a coluna de codigo_ocorrencia1
colunas2 <- names(aeronave)[2:length(names(aeronave))] # Eliminando a coluna de codigo_ocorrencia2
colunas3 <- names(fator_contribuinte)[2:length(names(fator_contribuinte))] # Eliminando a coluna de codigo_ocorrencia3
colunas4 <- names(recomendacao)[2:length(names(recomendacao))] # Eliminando a coluna de codigo_ocorrencia4
#
ordem_colunas <- c(colunas0, colunas1, colunas2, colunas3, colunas4)
#
data.table::setcolorder(tabela, ordem_colunas)
str(tabela)
tabela$ocorrencia_dia
tabela$ocorrencia_dia[1]
tabela$ocorrencia_dia[1] %>% as.IDate()
as.IDate(tabela$ocorrencia_dia[1])
as.IDate(tabela$ocorrencia_dia[1], format = "%d%M%Y")
as.IDate(tabela$ocorrencia_dia[1], "%d/%m/%y")
class(as.IDate(tabela$ocorrencia_dia[1], "%d/%m/%y"))
str(tabela)
str(tabela)
names(tabela)
library(magrittr)
recomendacao_dia_feedback %>% unique()
tabela$recomendacao_dia_feedback %>% unique()
tabela$recomendacao_dia_feedback %>% unique() %>% class
# Converte colunas de data que estão como texto
colunas_data_texto <- c(
"ocorrencia_dia",
"recomendacao_dia_assinatura",
"recomendacao_dia_encaminhamento",
"recomendacao_dia_feedback")
colunas_data_texto
str(ocorrencia)
str(tabela)
names(tabela)
grepl("*dia*", names(tabela))
names(tabela)[grepl("*dia*", names(tabela))]
names(tabela)[grepl("*dia", names(tabela))]
names(tabela)[grepl("*dia", names(tabela))]
# Converte colunas de data que estão como texto
# ocorrencia_hora - ITime
colunas_data_texto <- names(tabela)[grepl("*dia", names(tabela))]
tabela[, (colunas_data_texto) := as.IDate(.SD, "%d/%m/%y"), .SDcols = colunas_data_texto]
tabela[, (colunas_data_texto) := lapply(.SD, as.IDate("%d/%m/%y"), .SDcols = colunas_data_texto]
tabela[, (colunas_data_texto) := lapply(.SD, as.IDate("%d/%m/%y")), .SDcols = colunas_data_texto]
# Converte colunas de data que estão como texto
# ocorrencia_hora - ITime
colunas_data_texto <- names(tabela)[grepl("*dia", names(tabela))]
colunas_data_texto
tabela[, colunas_data_texto]
tabela[, ..colunas_data_texto]
tabela[, ..colunas_data_texto] %>% unique
tabela[, ..colunas_data_texto] %>% unique %>% View
tabela[, ..colunas_data_texto] %>% str
tabela[, .(teste = lapply(.SD, print), .SDcols = de_texto_para_data]
tabela[, .(teste = lapply(.SD, print)), .SDcols = de_texto_para_data]
# Converte colunas de data que estão como texto
# ocorrencia_hora - ITime
de_texto_para_data <- names(tabela)[grepl("*dia", names(tabela))]
tabela[, .(teste = lapply(.SD, print)), .SDcols = de_texto_para_data]
tabela[, .(teste = lapply(.SD, print)), .SDcols = de_texto_para_data]
tabela[, .(teste = lapply(.SD, print)), .SDcols = de_texto_para_data]
de_texto_para_data_ <- names(tabela)[grepl("*dia", names(tabela))]
# Remove ocorrencia_dia porque está em um formato diferente
de_texto_para_data <- de_texto_para_data_[2:length(de_texto_para_data_)]
tabela[, (de_texto_para_data) := lapply(.SD, as.IDate("%d/%m/%y")), .SDcols = de_texto_para_data]
tabela[, ..de_texto_para_data]
tabela[, (de_texto_para_data) := lapply(.SD, as.IDate("%y/%m/%d")), .SDcols = de_texto_para_data]
as.IDate("2019-10-28", "%y/%m/%d")
as.IDate("2019-10-28", "%d/%m/%y")
as.IDate("28-10-2000", "%d/%m/%y")
as.IDate("2019-10-28", "%Y/%m/%d")
as.IDate("2019-10-28", "%y-%m-%d")
as.IDate("2019-10-28", "%Y-%m-%d")
tabela[]
tabela[, ..de_texto_para_data_]
tabela[, ..de_texto_para_data_] %>% tail
tabela[!is.na(), ..de_texto_para_data_] %>%
tabela[!is.na(), ..de_texto_para_data_]
tabela[!is.na(recomendacao_dia_encaminhamento ), ..de_texto_para_data_]
tabela[, recomendacao_dia_feedback] %>% unique
# Converte colunas de data que estão como texto
de_texto_para_data_ <- names(tabela)[grepl("*dia", names(tabela))]
# Remove ocorrencia_dia porque está em um formato diferente
de_texto_para_data <- de_texto_para_data_[2:length(de_texto_para_data_)]
tabela[, (de_texto_para_data) := lapply(.SD, as.IDate("%Y-%m-%d")), .SDcols = de_texto_para_data]
de_texto_para_data
tabela[, `:=`(
divulgacao_dia_publicacao = as.IDate(divulgacao_dia_publicacao, "%Y-%m-%d"),
recomendacao_dia_assinatura = as.IDate(divulgacao_dia_publicacao, "%Y-%m-%d"),
recomendacao_dia_encaminhamento = as.IDate(divulgacao_dia_publicacao, "%Y-%m-%d"),
recomendacao_dia_feedback = as.IDate(divulgacao_dia_publicacao, "%Y-%m-%d")
)]
tabela
tabela
## Global options
knitr::opts_chunk$set(cache = TRUE)
# Pacotes
library(data.table) # Framework de manipulação dos dados
library(echarts4r) # Framework de visualização de séries temporais
# Tabela Central - Ocorrência
ocorrencia <- data.table::fread(
"http://sistema.cenipa.aer.mil.br/cenipa/media/opendata/ocorrencia.csv",
encoding = "UTF-8"
)
# Tabela Complementar 1 - Código de Ocorrência 1
ocorrencia_tipo <- data.table::fread(
"http://sistema.cenipa.aer.mil.br/cenipa/media/opendata/ocorrencia_tipo.csv",
encoding = "UTF-8"
)
# Tabela Complementar 2 - Código de Ocorrência 2
aeronave <- data.table::fread(
"http://sistema.cenipa.aer.mil.br/cenipa/media/opendata/aeronave.csv",
encoding = "UTF-8"
)
# Tabela Complementar 3 - Código de Ocorrência 3
fator_contribuinte <- data.table::fread(
"http://sistema.cenipa.aer.mil.br/cenipa/media/opendata/fator_contribuinte.csv",
encoding = "UTF-8"
)
# Tabela Complementar 4 - Código de Ocorrência 4
recomendacao <- data.table::fread(
"http://sistema.cenipa.aer.mil.br/cenipa/media/opendata/recomendacao.csv",
encoding = "UTF-8"
)
nome_tabelas_complementares = list("OCORRENCIA_TIPO", "AERONAVE", "FATOR_CONTRIBUINTE", "RECOMENDACAO")
chave_tabelas_complementares = list("codigo_ocorrencia1", "codigo_ocorrencia2", "codigo_ocorrencia3", "codigo_ocorrencia4")
reactable::reactable(data.table::data.table(nome_tabelas_complementares, chave_tabelas_complementares))
head(ocorrencia[, c("codigo_ocorrencia", "codigo_ocorrencia1", "codigo_ocorrencia2", "codigo_ocorrencia3", "codigo_ocorrencia4")])
identical(
ocorrencia[, codigo_ocorrencia],
ocorrencia[, codigo_ocorrencia1],
ocorrencia[, codigo_ocorrencia2],
ocorrencia[, codigo_ocorrencia3],
ocorrencia[, codigo_ocorrencia4]
)
cruzamento1 <- ocorrencia[ocorrencia_tipo, on = "codigo_ocorrencia1"] # Left Join 1
cruzamento2 <- cruzamento1[aeronave, on = "codigo_ocorrencia2"] # Left Join 2
cruzamento3 <- cruzamento2[fator_contribuinte, on = "codigo_ocorrencia3"] # Left Join 3
# tabela <- cruzamento3[recomendacao, on = "codigo_ocorrencia4"] # Left Join 4
head(ocorrencia[, .(n = .N), by = codigo_ocorrencia][n > 1][order(-n)])
head(ocorrencia_tipo[, .(n = .N), by = codigo_ocorrencia1][n > 1][order(-n)])
head(aeronave[, .(n = .N), by = codigo_ocorrencia2][n > 1][order(-n)])
head(fator_contribuinte[, .(n = .N), by = codigo_ocorrencia3][n > 1][order(-n)])
head(recomendacao[, .(n = .N), by = codigo_ocorrencia4][n > 1][order(-n)])
cruzamento1 <- ocorrencia_tipo[ocorrencia, on = "codigo_ocorrencia1", allow.cartesian = TRUE] # Left Join 1
cruzamento2 <- aeronave[cruzamento1, on = "codigo_ocorrencia2", allow.cartesian = TRUE] # Left Join 2
cruzamento3 <- fator_contribuinte[cruzamento2, on = "codigo_ocorrencia3", allow.cartesian = TRUE] # Left Join 3
tabela <- recomendacao[cruzamento3, on = "codigo_ocorrencia4", allow.cartesian = TRUE] # Left Join 4
head(tabela)
colunas0 <- names(ocorrencia)
colunas1 <- names(ocorrencia_tipo)[2:length(names(ocorrencia_tipo))] # Eliminando a coluna de codigo_ocorrencia1
colunas2 <- names(aeronave)[2:length(names(aeronave))] # Eliminando a coluna de codigo_ocorrencia2
colunas3 <- names(fator_contribuinte)[2:length(names(fator_contribuinte))] # Eliminando a coluna de codigo_ocorrencia3
colunas4 <- names(recomendacao)[2:length(names(recomendacao))] # Eliminando a coluna de codigo_ocorrencia4
#
ordem_colunas <- c(colunas0, colunas1, colunas2, colunas3, colunas4)
#
data.table::setcolorder(tabela, ordem_colunas)
names(tabela)[grepl("*dia", names(tabela))]
## Global options
knitr::opts_chunk$set(cache = TRUE)
# Pacotes
library(data.table) # Framework de manipulação dos dados
library(echarts4r) # Framework de visualização de séries temporais
# Tabela Central - Ocorrência
ocorrencia <- data.table::fread(
"http://sistema.cenipa.aer.mil.br/cenipa/media/opendata/ocorrencia.csv",
encoding = "UTF-8"
)
# Tabela Complementar 1 - Código de Ocorrência 1
ocorrencia_tipo <- data.table::fread(
"http://sistema.cenipa.aer.mil.br/cenipa/media/opendata/ocorrencia_tipo.csv",
encoding = "UTF-8"
)
# Tabela Complementar 2 - Código de Ocorrência 2
aeronave <- data.table::fread(
"http://sistema.cenipa.aer.mil.br/cenipa/media/opendata/aeronave.csv",
encoding = "UTF-8"
)
# Tabela Complementar 3 - Código de Ocorrência 3
fator_contribuinte <- data.table::fread(
"http://sistema.cenipa.aer.mil.br/cenipa/media/opendata/fator_contribuinte.csv",
encoding = "UTF-8"
)
# Tabela Complementar 4 - Código de Ocorrência 4
recomendacao <- data.table::fread(
"http://sistema.cenipa.aer.mil.br/cenipa/media/opendata/recomendacao.csv",
encoding = "UTF-8"
)
nome_tabelas_complementares = list("OCORRENCIA_TIPO", "AERONAVE", "FATOR_CONTRIBUINTE", "RECOMENDACAO")
chave_tabelas_complementares = list("codigo_ocorrencia1", "codigo_ocorrencia2", "codigo_ocorrencia3", "codigo_ocorrencia4")
reactable::reactable(data.table::data.table(nome_tabelas_complementares, chave_tabelas_complementares))
head(ocorrencia[, c("codigo_ocorrencia", "codigo_ocorrencia1", "codigo_ocorrencia2", "codigo_ocorrencia3", "codigo_ocorrencia4")])
identical(
ocorrencia[, codigo_ocorrencia],
ocorrencia[, codigo_ocorrencia1],
ocorrencia[, codigo_ocorrencia2],
ocorrencia[, codigo_ocorrencia3],
ocorrencia[, codigo_ocorrencia4]
)
cruzamento1 <- ocorrencia[ocorrencia_tipo, on = "codigo_ocorrencia1"] # Left Join 1
cruzamento2 <- cruzamento1[aeronave, on = "codigo_ocorrencia2"] # Left Join 2
cruzamento3 <- cruzamento2[fator_contribuinte, on = "codigo_ocorrencia3"] # Left Join 3
# tabela <- cruzamento3[recomendacao, on = "codigo_ocorrencia4"] # Left Join 4
head(ocorrencia[, .(n = .N), by = codigo_ocorrencia][n > 1][order(-n)])
head(ocorrencia_tipo[, .(n = .N), by = codigo_ocorrencia1][n > 1][order(-n)])
head(aeronave[, .(n = .N), by = codigo_ocorrencia2][n > 1][order(-n)])
head(fator_contribuinte[, .(n = .N), by = codigo_ocorrencia3][n > 1][order(-n)])
head(recomendacao[, .(n = .N), by = codigo_ocorrencia4][n > 1][order(-n)])
cruzamento1 <- ocorrencia_tipo[ocorrencia, on = "codigo_ocorrencia1", allow.cartesian = TRUE] # Left Join 1
cruzamento2 <- aeronave[cruzamento1, on = "codigo_ocorrencia2", allow.cartesian = TRUE] # Left Join 2
cruzamento3 <- fator_contribuinte[cruzamento2, on = "codigo_ocorrencia3", allow.cartesian = TRUE] # Left Join 3
tabela <- recomendacao[cruzamento3, on = "codigo_ocorrencia4", allow.cartesian = TRUE] # Left Join 4
head(tabela)
colunas0 <- names(ocorrencia)
colunas1 <- names(ocorrencia_tipo)[2:length(names(ocorrencia_tipo))] # Eliminando a coluna de codigo_ocorrencia1
colunas2 <- names(aeronave)[2:length(names(aeronave))] # Eliminando a coluna de codigo_ocorrencia2
colunas3 <- names(fator_contribuinte)[2:length(names(fator_contribuinte))] # Eliminando a coluna de codigo_ocorrencia3
colunas4 <- names(recomendacao)[2:length(names(recomendacao))] # Eliminando a coluna de codigo_ocorrencia4
#
ordem_colunas <- c(colunas0, colunas1, colunas2, colunas3, colunas4)
#
data.table::setcolorder(tabela, ordem_colunas)
names(tabela)[grepl("*dia", names(tabela))]
tabela[, `:=`(
divulgacao_dia_publicacao = as.IDate(divulgacao_dia_publicacao, "%Y-%m-%d"),
recomendacao_dia_assinatura = as.IDate(divulgacao_dia_publicacao, "%Y-%m-%d"),
recomendacao_dia_encaminhamento = as.IDate(divulgacao_dia_publicacao, "%Y-%m-%d"),
recomendacao_dia_feedback = as.IDate(divulgacao_dia_publicacao, "%Y-%m-%d")
)]
cruzamento1 <- ocorrencia_tipo[ocorrencia, on = "codigo_ocorrencia1", allow.cartesian = TRUE] # Left Join 1
cruzamento2 <- aeronave[cruzamento1, on = "codigo_ocorrencia2", allow.cartesian = TRUE] # Left Join 2
cruzamento3 <- fator_contribuinte[cruzamento2, on = "codigo_ocorrencia3", allow.cartesian = TRUE] # Left Join 3
tabela <- recomendacao[cruzamento3, on = "codigo_ocorrencia4", allow.cartesian = TRUE] # Left Join 4
head(tabela)
tabela[, `:=`(
divulgacao_dia_publicacao = as.IDate(divulgacao_dia_publicacao, "%Y-%m-%d"),
recomendacao_dia_assinatura = as.IDate(recomendacao_dia_assinatura, "%Y-%m-%d"),
recomendacao_dia_encaminhamento = as.IDate(recomendacao_dia_encaminhamento, "%Y-%m-%d"),
recomendacao_dia_feedback = as.IDate(recomendacao_dia_feedback, "%Y-%m-%d")
)]
tabela[, ..de_texto_para_data]
# Converte colunas de data que estão como texto
de_texto_para_data_ <- names(tabela)[grepl("*dia", names(tabela))]
# Remove ocorrencia_dia porque está em um formato diferente
de_texto_para_data <- de_texto_para_data_[2:length(de_texto_para_data_)]
tabela[, ..de_texto_para_data]
tabela[, ..de_texto_para_data] %>% str
cruzamento1 <- ocorrencia_tipo[ocorrencia, on = "codigo_ocorrencia1", allow.cartesian = TRUE] # Left Join 1
cruzamento2 <- aeronave[cruzamento1, on = "codigo_ocorrencia2", allow.cartesian = TRUE] # Left Join 2
cruzamento3 <- fator_contribuinte[cruzamento2, on = "codigo_ocorrencia3", allow.cartesian = TRUE] # Left Join 3
tabela <- recomendacao[cruzamento3, on = "codigo_ocorrencia4", allow.cartesian = TRUE] # Left Join 4
head(tabela)
colunas0 <- names(ocorrencia)
colunas1 <- names(ocorrencia_tipo)[2:length(names(ocorrencia_tipo))] # Eliminando a coluna de codigo_ocorrencia1
colunas2 <- names(aeronave)[2:length(names(aeronave))] # Eliminando a coluna de codigo_ocorrencia2
colunas3 <- names(fator_contribuinte)[2:length(names(fator_contribuinte))] # Eliminando a coluna de codigo_ocorrencia3
colunas4 <- names(recomendacao)[2:length(names(recomendacao))] # Eliminando a coluna de codigo_ocorrencia4
#
ordem_colunas <- c(colunas0, colunas1, colunas2, colunas3, colunas4)
#
data.table::setcolorder(tabela, ordem_colunas)
# Converte colunas de data que estão como texto
de_texto_para_data_ <- names(tabela)[grepl("*dia", names(tabela))]
# Remove ocorrencia_dia porque está em um formato diferente
de_texto_para_data <- de_texto_para_data_[2:length(de_texto_para_data_)]
#tabela[, (de_texto_para_data) := lapply(.SD, as.IDate("%Y-%m-%d")), .SDcols = de_texto_para_data]
tabela[, `:=`(
divulgacao_dia_publicacao = as.IDate(divulgacao_dia_publicacao, "%Y-%m-%d"),
recomendacao_dia_assinatura = as.IDate(recomendacao_dia_assinatura, "%Y-%m-%d"),
recomendacao_dia_encaminhamento = as.IDate(recomendacao_dia_encaminhamento, "%Y-%m-%d"),
recomendacao_dia_feedback = as.IDate(recomendacao_dia_feedback, "%Y-%m-%d")
)]
tabela[, ..de_texto_para_data]
tabela[, ..de_texto_para_data] %>% str
cruzamento1 <- ocorrencia_tipo[ocorrencia, on = "codigo_ocorrencia1", allow.cartesian = TRUE] # Left Join 1
cruzamento2 <- aeronave[cruzamento1, on = "codigo_ocorrencia2", allow.cartesian = TRUE] # Left Join 2
cruzamento3 <- fator_contribuinte[cruzamento2, on = "codigo_ocorrencia3", allow.cartesian = TRUE] # Left Join 3
tabela <- recomendacao[cruzamento3, on = "codigo_ocorrencia4", allow.cartesian = TRUE] # Left Join 4
head(tabela)
colunas0 <- names(ocorrencia)
colunas1 <- names(ocorrencia_tipo)[2:length(names(ocorrencia_tipo))] # Eliminando a coluna de codigo_ocorrencia1
colunas2 <- names(aeronave)[2:length(names(aeronave))] # Eliminando a coluna de codigo_ocorrencia2
colunas3 <- names(fator_contribuinte)[2:length(names(fator_contribuinte))] # Eliminando a coluna de codigo_ocorrencia3
colunas4 <- names(recomendacao)[2:length(names(recomendacao))] # Eliminando a coluna de codigo_ocorrencia4
#
ordem_colunas <- c(colunas0, colunas1, colunas2, colunas3, colunas4)
#
data.table::setcolorder(tabela, ordem_colunas)
# Converte colunas de data que estão como texto
de_texto_para_data_ <- names(tabela)[grepl("*dia", names(tabela))]
# Remove ocorrencia_dia porque está em um formato diferente
de_texto_para_data <- de_texto_para_data_[2:length(de_texto_para_data_)]
tabela[, (de_texto_para_data) := lapply(.SD, as.IDate("%Y-%m-%d")), .SDcols = de_texto_para_data]
cruzamento1 <- ocorrencia_tipo[ocorrencia, on = "codigo_ocorrencia1", allow.cartesian = TRUE] # Left Join 1
cruzamento2 <- aeronave[cruzamento1, on = "codigo_ocorrencia2", allow.cartesian = TRUE] # Left Join 2
cruzamento3 <- fator_contribuinte[cruzamento2, on = "codigo_ocorrencia3", allow.cartesian = TRUE] # Left Join 3
tabela <- recomendacao[cruzamento3, on = "codigo_ocorrencia4", allow.cartesian = TRUE] # Left Join 4
head(tabela)
colunas0 <- names(ocorrencia)
colunas1 <- names(ocorrencia_tipo)[2:length(names(ocorrencia_tipo))] # Eliminando a coluna de codigo_ocorrencia1
colunas2 <- names(aeronave)[2:length(names(aeronave))] # Eliminando a coluna de codigo_ocorrencia2
colunas3 <- names(fator_contribuinte)[2:length(names(fator_contribuinte))] # Eliminando a coluna de codigo_ocorrencia3
colunas4 <- names(recomendacao)[2:length(names(recomendacao))] # Eliminando a coluna de codigo_ocorrencia4
#
ordem_colunas <- c(colunas0, colunas1, colunas2, colunas3, colunas4)
#
data.table::setcolorder(tabela, ordem_colunas)
tabela[, `:=`(
divulgacao_dia_publicacao = as.IDate(divulgacao_dia_publicacao, "%Y-%m-%d"),
recomendacao_dia_assinatura = as.IDate(recomendacao_dia_assinatura, "%Y-%m-%d"),
recomendacao_dia_encaminhamento = as.IDate(recomendacao_dia_encaminhamento, "%Y-%m-%d"),
recomendacao_dia_feedback = as.IDate(recomendacao_dia_feedback, "%Y-%m-%d")
)]
tabela[, ..de_texto_para_data]
aaa <- tabela[, ..de_texto_para_data]
aaa$divulgacao_dia_publicacao %>% unique
tabela$divulgacao_dia_publicacao %>% unique
aaa$recomendacao_dia_assinatura
aaa$recomendacao_dia_assinatura
aaa$recomendacao_dia_assinatura %>% unique()
tabela$recomendacao_dia_assinatura %>% unique()
cruzamento1 <- ocorrencia_tipo[ocorrencia, on = "codigo_ocorrencia1", allow.cartesian = TRUE] # Left Join 1
cruzamento2 <- aeronave[cruzamento1, on = "codigo_ocorrencia2", allow.cartesian = TRUE] # Left Join 2
cruzamento3 <- fator_contribuinte[cruzamento2, on = "codigo_ocorrencia3", allow.cartesian = TRUE] # Left Join 3
tabela <- recomendacao[cruzamento3, on = "codigo_ocorrencia4", allow.cartesian = TRUE] # Left Join 4
head(tabela)
colunas0 <- names(ocorrencia)
colunas1 <- names(ocorrencia_tipo)[2:length(names(ocorrencia_tipo))] # Eliminando a coluna de codigo_ocorrencia1
colunas2 <- names(aeronave)[2:length(names(aeronave))] # Eliminando a coluna de codigo_ocorrencia2
colunas3 <- names(fator_contribuinte)[2:length(names(fator_contribuinte))] # Eliminando a coluna de codigo_ocorrencia3
colunas4 <- names(recomendacao)[2:length(names(recomendacao))] # Eliminando a coluna de codigo_ocorrencia4
#
ordem_colunas <- c(colunas0, colunas1, colunas2, colunas3, colunas4)
#
data.table::setcolorder(tabela, ordem_colunas)
aaa$divulgacao_dia_publicacao %>% unique
tabela$divulgacao_dia_publicacao %>% unique
tabela[, `:=`(
divulgacao_dia_publicacao = fifelse(divulgacao_dia_publicacao == "NULL", NA,  divulgacao_dia_publicacao),
recomendacao_dia_assinatura = fifelse(recomendacao_dia_assinatura == "NULL", NA,  recomendacao_dia_assinatura),
recomendacao_dia_encaminhamento = fifelse(recomendacao_dia_encaminhamento == "NULL", NA,  recomendacao_dia_encaminhamento),
recomendacao_dia_feedback = fifelse(recomendacao_dia_feedback == "NULL", NA,  recomendacao_dia_feedback)
)]
tabela[, `:=`(
divulgacao_dia_publicacao = fifelse(divulgacao_dia_publicacao == "NULL", NULL,  divulgacao_dia_publicacao),
recomendacao_dia_assinatura = fifelse(recomendacao_dia_assinatura == "NULL", NULL,  recomendacao_dia_assinatura),
recomendacao_dia_encaminhamento = fifelse(recomendacao_dia_encaminhamento == "NULL", NULL,  recomendacao_dia_encaminhamento),
recomendacao_dia_feedback = fifelse(recomendacao_dia_feedback == "NULL", NULL,  recomendacao_dia_feedback)
)]
str(tabela[, ..de_texto_para_data])
de_texto_para_data <- names(tabela)[grepl("*dia", names(tabela))]
str(tabela[, ..de_texto_para_data])
tabela[, `:=`(
divulgacao_dia_publicacao = as.IDate(divulgacao_dia_publicacao, "%Y-%m-%d"),
recomendacao_dia_assinatura = as.IDate(recomendacao_dia_assinatura, "%Y-%m-%d"),
recomendacao_dia_encaminhamento = as.IDate(recomendacao_dia_encaminhamento, "%Y-%m-%d"),
recomendacao_dia_feedback = as.IDate(recomendacao_dia_feedback, "%Y-%m-%d")
)]
tabela[, ocorrencia_dia := as.IDate(ocorrencia_dia, "%d/%m/%Y")]
# Converte somente a coluna ocorrencia dia por ter um formato diferente (DD/MM/YYYY)
tabela[, ocorrencia_dia := as.IDate(ocorrencia_dia, "%d/%m/%Y")]
# Converte colunas que possuem o formato (YYYY-MM-DD)
tabela[, `:=`(
divulgacao_dia_publicacao = as.IDate(divulgacao_dia_publicacao, "%Y-%m-%d"),
recomendacao_dia_assinatura = as.IDate(recomendacao_dia_assinatura, "%Y-%m-%d"),
recomendacao_dia_encaminhamento = as.IDate(recomendacao_dia_encaminhamento, "%Y-%m-%d"),
recomendacao_dia_feedback = as.IDate(recomendacao_dia_feedback, "%Y-%m-%d")
)]
str(tabela)
tabela$ocorrencia_latitude %>% unique
tabela[ocorrencia_latitude == "***"]
tabela[ocorrencia_latitude == "***"] %>% unique
tabela[ocorrencia_latitude == "***"] %>% unique %>% View
unlist(lapply(tabela, is.numeric))
tabela[, unlist(lapply(tabela, is.numeric))]
tabela[, unlist(lapply(tabela, is.numeric))]
lapply(tabela, is.numeric)
unlist(lapply(tabela, is.numeric))
unlist(lapply(tabela, is.numeric)) %>% class
unlist(lapply(tabela, is.numeric))[TRUE]
unlist(lapply(tabela, is.numeric))
which(unlist(lapply(tabela, is.numeric)))
